<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.eatit.mapper.DeliveryMapper">
  
  	<!-- 데이터 테이블 매핑 -->
  	<resultMap type="com.eatit.businessDomain.DeliveryVO" id="deliveryVO"/>
  	<resultMap type="com.eatit.memberDomain.MemberVO" id="memberVO"/>
  	<resultMap type="com.eatit.warehouseDomain.StockVO" id="stockVO"/>
  
	<!-- 전체 배송 목록 개수 -->
	<select id="selectCountTotalDelivery" resultType="int">
			SELECT COUNT(*)
			FROM delivery
			WHERE delivery_status != '삭제'
	</select> 
	
	<!-- 전체 배송 목록 조회 -->
  	<select id="selectDeliveryList" resultType="deliveryVO">
		SELECT d.*, mi.name "product_name", mi.photo_paths, mi.price, o.quantity
		FROM delivery d
			JOIN orders o ON d.order_id = o.order_id
			JOIN masterdata_information mi ON o.product_no = mi.product_no
		WHERE delivery_status != '삭제'
		ORDER BY create_date DESC
		LIMIT #{startPage}, #{pageSize}
  	</select>
  	
	<!-- 검색,필터된 배송 목록 개수 -->
	<select id="selectCountMatchingDelivery" resultType="int" parameterType="map">
		SELECT COUNT(*)
		FROM delivery
		WHERE delivery_status != '삭제'	
		<choose>
			<when test = "filter == '배송준비중'"> AND o.order_status = '출고준비중' </when>
			<when test = "filter == '배송준비중'"> AND o.order_status = '출고완료' </when>
			<when test = "filter == '배송준비중'"> AND o.order_status = '배송준비중' </when>
			<when test = "filter == '배송중'"> AND o.order_status = '배송중' </when>
			<when test = "filter == '배송완료'"> AND o.order_status = '배송완료' </when>
		</choose>		  		  		
		AND (
				delivery_employee_no LIKE CONCAT('%', #{query}, '%')
				OR confirm_employee_no LIKE CONCAT('%', #{query}, '%')
			 )
	</select>
  
  	<!-- 검색,필터된 배송 목록 조회 -->
	<select id="selectMatchingDeliveryList" resultType="deliveryVO" parameterType="map">
		SELECT *
		FROM delivery
		WHERE delivery_status != '삭제'	 
		<choose>
			<when test = "filter == '배송준비중'"> AND o.order_status = '출고준비중' </when>
			<when test = "filter == '배송준비중'"> AND o.order_status = '출고완료' </when>
			<when test = "filter == '배송준비중'"> AND o.order_status = '배송준비중' </when>
			<when test = "filter == '배송중'"> AND o.order_status = '배송중' </when>
			<when test = "filter == '배송완료'"> AND o.order_status = '배송완료' </when>
		</choose>		  		 		
		AND (
				delivery_employee_no LIKE CONCAT('%', #{query}, '%')
				OR confirm_employee_no LIKE CONCAT('%', #{query}, '%')
			 )
		ORDER BY create_date DESC
		LIMIT #{cri.startPage}, #{cri.pageSize}
	</select>
  
  	<!-- 로그인한 회원 정보 조회 -->
  	<select id="selectMemberInfo" resultMap="memberVO">
  		SELECT *
  		FROM member
  		WHERE id = #{id}
  	</select>
  	
  	<!-- 배송 신청서 추가 -->
  	<insert id="insertDelivery">
		INSERT INTO delivery (order_id, confirm_employee_no)
  		VALUES (#{order_id}, #{confirm_employee_no})
	</insert>
  
  	<!-- 창고 입출고 정보 조회 -->
  	<select id="selectProductStock" resultType="stockVO">
  		SELECT MAX(product_code) "product_code", warehouse_no, category, product_unit, MAX(expiry_date) "expiry_date", SUM(quantity) "quantity"
		FROM stock
		WHERE product_name = #{productName}
		GROUP BY warehouse_no, category, product_name, product_unit
  	</select>
  
  	<!-- 해당 배송 내역 상세 조회 -->
  	<select id="selectDeliveryDetail" resultType="deliveryVO">
  		SELECT d.*, c.*, o.comments
  		FROM delivery d
  			JOIN orders o ON d.order_id = o.order_id
  			JOIN company c ON o.company_no = c.company_no
  		WHERE delivery_id = #{delivery_id}
  	</select>
  
 	<!-- 배송 시작 -->
 	<update id="updateDeliveryStart" parameterType="map">
 		UPDATE delivery SET delivery_start_date = now(), update_date = NOW(), delivery_status ='배송중', confirm_employee_no = #{employee_no}
  		WHERE delivery_id = #{delivery_id} 
 	</update>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  </mapper>